// Program 1
class Factorial {

    Void main (Int a) {
        println(new Fac().computeFac(a)) ;
        return ;
    } 

}

class Fac {

/* This is the factorial function that is not written
   in tail-recursive manner. (A tail recursive factorial
   function is expected to take in two parameters.)
   Can your compiler optimize it to a tail-recursive function?
   Even if optimizing to tail-recursive form is beyond reach,
   could you attempt to optimize it so that it can run faster?
*/

  Int computeFac(Int num){

    Int num_aux;

    if(num < 1) { // shouldnâ€™t it be num <= 1? 
      num_aux = 1 ;
    }
    else {
      num_aux = num * (this.computeFac(num-1)) ;
    }
        
    return num_aux ;
  }

}


